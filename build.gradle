//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
//file:noinspection GradlePackageVersionRange
plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "io.github.juuxel.loom-quiltflower" version "1.+" // Quiltflower, a better decompiler
    id "io.github.p03w.machete" version "1.+" // automatic jar compressing on build
    id "org.ajoberstar.grgit" version "4.1.1"
    id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

ext.buildNumber = System.getenv("GITHUB_RUN_NUMBER")
String patch = buildNumber != null ? buildNumber : "99999"
version = project.mod_version.replace("<build>", patch)

repositories {
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.bai.lol" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
    maven { url = "https://maven.shedaniel.me/" }
}

dependencies {
    // dev environment
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.fabricmc:yarn:${rootProject.minecraft_version}+build.${rootProject.mappings_version}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

    modLocalRuntime("maven.modrinth:lazydfu:0.1.2")
    modLocalRuntime("maven.modrinth:suggestion-tweaker:${project.suggestion_tweaker_version}")
    modLocalRuntime("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") { exclude(group: "net.fabricmc.fabric-api") }
    modLocalRuntime("mcp.mobius.waila:wthit:fabric-${project.wthit_version}")
    modLocalRuntime("maven.modrinth:badpackets:fabric-${project.bad_packets_version}")
    modLocalRuntime("maven.modrinth:sodium:${project.sodium_version}") // rendering beware
    localRuntime("org.joml:joml:1.10.4")
    modLocalRuntime("maven.modrinth:lithium:${project.lithium_version}")
    modLocalRuntime("maven.modrinth:iris:${project.iris_version}")
    modLocalRuntime("com.terraformersmc:modmenu:${project.modmenu_version}") { exclude group: "net.fabricmc"; exclude group: "net.fabricmc.fabric-api" }

    // dependencies
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
    modApi(include("io.github.tropheusj:dripstone-fluid-lib:${project.dripstone_fluid_lib_version}"))
    modApi(include("io.github.tropheusj:milk-lib:${project.milk_lib_version}"))
}

task buildOrPublish {
    group = "build"
    String mavenUser = System.getenv().MAVEN_USER
    if (mavenUser != null && !mavenUser.isEmpty()) {
        dependsOn(tasks.getByName("publish"))
        println "prepared for publish"
    } else {
        dependsOn(tasks.getByName("build"))
        println "prepared for build"
    }
}


processResources {
    Map<String, String> properties = new HashMap<>()
    properties.put("version", project.version)
    properties.put("loader_version", project.loader_version)
    properties.put("fabric_version", project.fabric_version)
    properties.put("minecraft_version", project.minecraft_version)
    properties.put("java_version", sourceCompatibility)

    properties.forEach((k, v) -> inputs.property(k, v))

    filesMatching("fabric.mod.json") {
        expand properties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = Integer.parseInt(sourceCompatibility)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            url = "https://mvn.devos.one/${System.getenv().PUBLISH_SUFFIX}/"
            credentials {
                username = System.getenv().MAVEN_USER
                password = System.getenv().MAVEN_PASS
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}
